<?php
echo $this->headtitle("Booking");
?>
<?php
$flashMessenger = $this->flashMessenger()
	->setMessageOpenFormat('<div%s>
     <button type="button" class="close" data-dismiss="alert" aria-hidden="true">
         &times;
     </button>
     <ul><li>')
	->setMessageSeparatorString('</li><li>')
	->setMessageCloseString('</li></ul></div>');
?>
<?php echo $flashMessenger->render('error',   array('alert', 'alert-dismissable', 'alert-danger')); ?>
<?php echo $flashMessenger->render('info',    array('alert', 'alert-dismissable', 'alert-info')); ?>
<?php echo $flashMessenger->render('default', array('alert', 'alert-dismissable', 'alert-warning')); ?>
<?php echo $flashMessenger->render('success', array('alert', 'alert-dismissable', 'alert-success')); ?>
<div id="bookingBoard">

	<section class="page--header">
		<div class="container-fluid">
			<div class="row">
				<div class="col-lg-6">
					<!-- Page Title Start -->
					<h2 class="page--title h5">Logistics</h2>
					<!-- Page Title End -->

					<ul class="breadcrumb">
						<li class="breadcrumb-item"><a href="ecommerce.html"></a></li>
						<li class="breadcrumb-item active"><span>Package Logistics</span></li>
					</ul>
				</div>


			</div>
		</div>
	</section>
	



	<section id="" class="main--content">




		<div class="panel">
			<!-- Records Header Start -->
			<div class="records--header">
				<div class="title fa-shopping-bag">
					<h3 class="h3">
						All Logistics Package
						<!-- 					 <a href="#" class="btn btn-sm btn-outline-info">Manage -->
						<!-- 						Products</a> -->
					</h3>
					<!-- 				<p>Found Total 1,330 Products</p> -->
				</div>

				<div class="actions">
					<!-- 				<form action="#" class="search flex-wrap flex-md-nowrap"> -->
					<!-- 					<input type="text" class="form-control" placeholder="Product Name..." required> <select name="select" class="form-control"> -->
					<!-- 						<option value="" selected>Product Category</option> -->
					<!-- 					</select> -->
					<!-- 					<button type="submit" class="btn btn-rounded"> -->
					<!-- 						<i class="fa fa-search"></i> -->
					<!-- 					</button> -->
					<!-- 				</form> -->


					<a @click="toggleCreateForm()" data-toggle="modal" class="addProduct btn btn-lg btn-rounded btn-warning">Create
						Dispatch</a>
				</div>
			</div>
			<!-- Records Header End -->
		</div>

		<!-- Dispatch Manual crate form -->






		<div class="row">
			<?php echo $this->partial("dispatch-menu-list") ?>
			<div class="col-xl-9">
				<div class="panel">
					<div class="panel-heading">
						<h3 class="panel-title">Packages</h3>


					</div>

					<div class="panel-body">
						<div class="table-responsive">
							<table class="table style--2">
								<thead>
									<tr>

										<th>Logistics UID</th>
										<th>Customer Name</th>
										<th>Logistics Info</th>
										<th>Status</th>
										<th>Amount Paid</th>
										<th>Action</th>
									</tr>
								</thead>
								<tbody>
									<!-- Table Row Start -->
									<?php foreach ($data as $booking) :
										// 								var_dump($booking);
									?>
										<tr>

											<td><?php echo strtoupper($booking["logisticsUid"]) ?></td>
											<td><?php echo $booking["user"]["lastname"] ?></td>
											<td><a href="#" class="btn-link"><strong>Service Type : </strong><?php echo $booking["serviceType"]["type"] ?> <br>
											</td>
											<td><?php echo $this->statusHelper($booking["status"]) ?></td>
											<td><?php echo $this->myCurrency($booking["logisticsTransaction"]['amount']) ?></td>

											<!--                                                 <td><span class="text-muted">#BG6R9853lP</span></td> -->
											<td><a href="<?php echo $this->url("admin/default", ["controller" => "logistics", "action" => "view", "id" => $booking["logisticsUid"]]) ?>"><i class="fa fa-eye"></i></a> | <a href="#" @click="deleteBooking('<?php echo $booking["id"] ?>')"><i class="fa fa-trash"></i></a> </td>
										</tr>
									<?php endforeach; ?>
									<!-- Table Row End -->


								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>
</div>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBobkXMM-uzqQLM5pqs_n7prJKJJ4-JK5I&callback=initMap&libraries=places&v=weekly" defer></script>
<script>
	function initMap() {
		const map = new google.maps.Map(document.getElementById("map"), {
			zoom: 4,
			center: {
				lat: -33,
				lng: 151
			},
			zoom: 8,
			zoomControl: false
		});

		// Create the autocomplete object, restricting the search predictions to
		// geographical location types.
		autocomplete = new google.maps.places.Autocomplete(
			document.getElementById("autocomplete"), {
				// types: ["geocode"],
				componentRestrictions: {
					'country': ['ng']
				},
				fields: ['place_id', 'geometry', 'formatted_address']
			}
		);

		destination = new google.maps.places.Autocomplete(
			document.getElementById("destination"), {
				// types: ["geocode"],
				componentRestrictions: {
					'country': ['ng']
				},
				fields: ['place_id', 'geometry', 'formatted_address', "address_components", "icon", "name"]
			}
		);
		// When the user selects an address from the drop-down
		// zoom to the select location and add a marker.
		autocomplete.addListener("place_changed", addCustomerLocation);
		destination.addListener("place_changed", addDestinationLocation);
	}

	function addCustomerLocation() {
		// Get the place details from the autocomplete object.
		place = autocomplete.getPlace();
		console.log(place);


		var lat = place.geometry.location.lat();
		var lon = place.geometry.location.lng();



		// cutomerboard.pickUpAddress = place.formatted_address;

		// // cutomerboard.destinationAddress= 
		// cutomerboard.pickUpLongitude = lat;

		// cutomerboard.pickUpLatitude = lon;

		// cutomerboard.pickUpPlaceId = place.place_id;


		// cutomerboard.pickUpTime:

	}

	function addDestinationLocation() {
		dropOff = destination.getPlace();


		var dropLat = dropOff.geometry.location.lat();
		var dropLong = dropOff.geometry.location.lng();

		// cutomerboard.destinationAddress = dropOff.formatted_address;
		// cutomerboard.destinationLongitude = dropLat;
		// cutomerboard.destinationLatitude = dropLong;
		// cutomerboard.destinationPlaceId = dropOff.place_id;
	}


	let bookingBoards = new Vue({
		el: "#bookingBoard",
		data() {
			return {
				isDeleting: false,
				isCreateDispatch: false,
			}
		},
		methods: {
			toggleCreateForm() {
				this.isCreateDispatch = !this.isCreateDispatch;
			},
			
			deleteBooking(id) {

				swal({

					title: "DELETE DISPATCH",
					text: "Are you sure you want to remove this dispatch",
					icon: "warning",
					showCancelButton: true,
					confirmButtonColor: '#3085d6',
					cancelButtonColor: '#d33',
					confirmButtonText: 'REMOVE NOW'
				}).then(function(isConfirm) {

					if (isConfirm) {
						let formData = new FormData();
						formData.append("id", id);
						axios.post("/controller/logistics/remove-dispatch", formData).then(res => {
							if (res.status == 204) {
								window.location.reload();
							}
						}).catch(err => {
							swal({
								title: "Error",
								text: err.response.data.messages,
								icon: "error",
								showCancelButton: true,
								confirmButtonColor: '#3085d6',
								cancelButtonColor: '#3085d6',
								confirmButtonText: 'OK'
							})
						});
					}


				});

			},
		},
	});
</script>